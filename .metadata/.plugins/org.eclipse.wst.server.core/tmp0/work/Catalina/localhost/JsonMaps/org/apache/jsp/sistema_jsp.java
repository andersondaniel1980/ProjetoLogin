/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-04-07 04:33:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sistema_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>Maps Json</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"col-sm-4\"> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("    <label for=\"email\">Endereço</label>\r\n");
      out.write("\t<input type=\"text\" class=\"form-control\" id=\"busca\" name=\"busca\" value=\"\" placeholder=\"Digite o endereco\">\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write(" \t<label for=\"email\">Cep:</label>\r\n");
      out.write("\t<input type=\"text\" class=\"form-control\" id=\"cep\" name=\"cep\" value=\"\">\r\n");
      out.write("</div>\r\n");
      out.write("\t\r\n");
      out.write(" \t<button id=\"btn1\">Buscar</button>\r\n");
      out.write(" \t<button id=\"btn2\">Limpa</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("$(\"#btn2\").on('click',function(){\r\n");
      out.write("\tdocument.getElementById('resp').innerHTML =\"\";\r\n");
      out.write("\t$('#cep').val(\"\");\r\n");
      out.write("\t$('#busca').val(\"\");\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(\"#btn1\").on('click',function(){\r\n");
      out.write("\t\tvar pesquisa = $('#busca').val()\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\" \", \"%20\");\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\"ã\", \"a\");\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\"á\", \"a\");\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\"ó\", \"o\");\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\"ê\", \"e\");\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\"í\", \"i\");\r\n");
      out.write("\t\tvar endereco = pesquisa.replace(\"-\", \"%20\");\r\n");
      out.write("\r\n");
      out.write("\t\tendereco = \"https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBe_OpGrMSgvbVK3hfD4RqiaoAsIeD6gdY&new_forward_geocoder=true&address=\"+endereco;\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.getJSON(endereco, function(data) {\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < data.results.length; i++) {\r\n");
      out.write("\r\n");
      out.write(" \t\t\t\t\tvar adress = data.results[i].formatted_address;\r\n");
      out.write("\t\t\t\t\tvar ende = data.results[i].address_components[5].long_name;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$('#busca').val(adress);\r\n");
      out.write("// \t\t\t\t\tdocument.getElementById('nome').innerHTML = adress;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$('#cep').val(ende);\r\n");
      out.write("// \t\t\t\t\tdocument.getElementById('end').value= ende;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById('resp').innerHTML = \"Endereço encontrado\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tdocument.getElementById('resp').innerHTML = \"Endereço NÃO encontrado\";\r\n");
      out.write("\t  });\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"resp\" class=\"col-sm-12\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
